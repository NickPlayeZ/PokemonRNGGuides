{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/bdsp-emulator-setup",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Set up Yuzu/Ryujinx + CheatEngine","description":"How to set up Yuzu/Ryujinx and Cheat Engine in order to RNG in BDSP using lua scripts","isRoughDraft":true},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Set up Yuzu/Ryujinx + CheatEngine\",\n  \"description\": \"How to set up Yuzu/Ryujinx and Cheat Engine in order to RNG in BDSP using lua scripts\",\n  \"slug\": \"bdsp-emulator-setup\",\n  \"subCategory\": \"Basic Knowledge\",\n  \"isRoughDraft\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Requirements\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Installed \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.cheatengine.org/downloads.php\"\n  }, \"Cheat Engine\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Installed \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://yuzu-emu.org/downloads/\"\n  }, \"Yuzu\"), \"/\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ryujinx.org/download\"\n  }, \"Ryujinx\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Updated game to version 1.1.1+\")), mdx(\"h2\", null, \"Usage\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open Yuzu/Ryujinx, run the game and pause it at the title screen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open Cheat Engine, click on \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Edit > Settings\"), \", select \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Scan Settings\"), \" and check \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MEM_MAPPED\"), \" option\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Click on \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"File > Open Process\"), \" and select Yuzu/Ryujinx process (Yuzu will look like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"xxxx-yuzu xxx | game name\"), \", Ryujinx will look like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"xxxx-Ryujinx x.x.xxxx - game name\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Click on \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Table > Show Cheat Table Lua Script\"), \". A new window called \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Lua Script: Cheat Table\"), \" will appear\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Real96/BDSP-CheatEngine-Lua\"\n  }, \"BDSP_RNG.lua\"), \" with a text editor, copy all its content and paste it in the window opened before.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Click \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Execute Script\"), \". It will freeze for a bit, just wait until it will print all the rng info in a new window\")), mdx(\"h2\", null, \"Notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To change the info view tab mode, press the keys shown in the script output\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you want to stop the script, press keyboard key 0 or keyboard key NumPad 0. It won't stop otherwhise\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you want to restart the game, do what's written above and then restart the game and the script. It won't work otherwhise\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To avoid text flickering, be sure to enlarge enough the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Lua Engine\"), \" window\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"bdsp-emulator-setup"}},
    "staticQueryHashes": ["4168079547","884883011"]}