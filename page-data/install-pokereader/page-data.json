{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/install-pokereader",
    "result": {"data":{"mdx":{"frontmatter":{"title":"How to Install PokeReader","description":"Installing a tool on your 3DS to help RNG Pokemon","isRoughDraft":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"How to Install PokeReader\",\n  \"description\": \"Installing a tool on your 3DS to help RNG Pokemon\",\n  \"slug\": \"install-pokereader\",\n  \"subCategory\": \"3DS\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"PokeReader is a Plug n' Play plugin, and is a replacement for PokeCalc. Unlike when using NTR, it is possible to soft reset the game without crashing the console. In addition, more features have been added for RNG purposes.\"), mdx(\"h2\", null, \"Tools\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A 3DS with CFW (Custom Firmware)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://3ds.hacks.guide/\"\n  }, \"https://3ds.hacks.guide/\"), \" has instructions for installing CFW\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/LumaTeam/Luma3DS/releases\"\n  }, \"Luma version 12.0.0 or higher\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Other Luma versions, including those used for NTR and PCalc, are not compatible.\")))), mdx(\"h2\", null, \"Update Luma Settings\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Boot the console while holding \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Select\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Select the \\\"Enable loading external FIRMs and modules\\\" option.\")), mdx(\"p\", null, \"If you do not have this option, update Luma to version 12.0.0 or higher.\"), mdx(\"h2\", null, \"Install Plug n' Play\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Download the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/zaksabeast/3ds-Plug-n-play/releases/latest\"\n  }, \"latest release of Plug n' Play\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Copy the cxi files to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sd:/luma/sysmodules/\"), \". If a folder named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sysmodules\"), \" does not already exist, then create it.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"N3DS should only copy \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"0004013000CB9702.cxi\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"O3DS/2DS should copy both cxi files.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pnp_launcher.cia\"), \" found inside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pnp.zip\"), \".\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Note: To install a CIA, launch FBI on the 3ds and click 'A' on the file.\\n\")), mdx(\"h2\", null, \"Install PokeReader\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Download the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zaksabeast/PokeReader/releases/latest\"\n  }, \"latest release of PokeReader\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Copy \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pokereader.wasm\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/pnp/pokereader.wasm\"), \" on your SD card.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create the directory if it does not already exist.\")))), mdx(\"h2\", null, \"Launching PokeReader\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Launch the Plug n' Play app from the home menu.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Open a compatible Pokemon game.\")), mdx(\"p\", null, \"This must be done every time the console is turned off and back on to reload Plug n' Play.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Note: Plug n' Play support for Gen 7 games on O3DS/2DS is still in development.\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"install-pokereader"}},
    "staticQueryHashes": ["4168079547","884883011"]}