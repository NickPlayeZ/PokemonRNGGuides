{"version":3,"file":"component---src-templates-category-js-8a8f887dfd6687977ccf.js","mappings":"yHAEIA,EAAyB,EAAQ,MACjCC,EAA0B,EAAQ,MAItCC,EAAQ,OAAU,EAClB,IAAIC,EAAQF,EAAwB,EAAQ,OAExCG,GAAW,EADMJ,EAAuB,EAAQ,OAClBK,SAAuBF,EAAMG,cAAc,OAAQ,CACnFC,EAAG,sNACD,cACJL,EAAQ,EAAUE,C,+KCDlB,MAAMI,GAAYC,EAAAA,EAAAA,IAAWC,IAAK,CAChCC,UAAW,CACTC,QAAS,OACTC,WAAYH,EAAMI,QAAQ,GAC1BC,cAAeL,EAAMI,QAAQ,IAE/BE,WAAY,CACVC,YAAaP,EAAMI,QAAQ,IAE7BI,iBAAkB,CAChBC,UAAWT,EAAMI,QAAQ,QAOhBM,EAAYC,IAAmC,IAAlC,iBAAEH,EAAgB,OAAEI,GAAQD,EACpD,MAAME,EAAUf,IAEVgB,EAAgBC,IAAQH,GAAQI,GAASA,EAAMC,YAAYC,QAE3DC,EAAYL,EAAcM,KAAI,CAACJ,EAAOK,KAC1C,MAAM,MAAEH,EAAK,KAAEI,EAAI,YAAEC,GAAgBP,EAAMC,YACrCO,EAVcF,IAAI,SAAaA,EAAI,SAUpBG,CAAgBH,GAC/BI,EAVoBJ,IAAI,SAAaA,EAAI,eAUpBK,CAAsBL,GAEjD,OACE7B,EAAAA,cAACA,EAAAA,SAAc,CAACmC,IAAKV,GACnBzB,EAAAA,cAACoC,EAAAA,EAAQ,CAACC,UAAWjB,EAAQZ,UAAW8B,gBAAc,GACpDtC,EAAAA,cAACuC,EAAAA,EAAU,CACTC,UAAWC,EAAAA,GACXJ,UAAWjB,EAAQP,WACnB6B,GAAE,IAAMb,EACRc,KAAK,OACL,kBAAoBZ,EAAY,IAAIE,GAEpCjC,EAAAA,cAAC4C,EAAAA,EAAc,OAEjB5C,EAAAA,cAAC6C,EAAAA,EAAY,KACX7C,EAAAA,cAAC8C,EAAAA,EAAU,CAACC,QAAQ,KAAKP,UAAU,IAAIQ,GAAIjB,GACxCN,GAEHzB,EAAAA,cAAC8C,EAAAA,EAAU,CAACC,QAAQ,QAAQC,GAAIf,GAC7BH,KAINF,EAAQP,EAAc4B,OAAS,GAAKjD,EAAAA,cAACkD,EAAAA,EAAO,CAAC,cAAY,SAC3C,IAIrB,OACElD,EAAAA,cAACA,EAAAA,SAAc,KACbA,EAAAA,cAAC8C,EAAAA,EAAU,CACTC,QAAQ,KACRP,UAAU,KACVH,UAAWjB,EAAQL,kBAElBA,GAEHf,EAAAA,cAACmD,EAAAA,EAAI,KAAEzB,GACQ,C,gEC3CrB,UA3ByBR,IAA4B,IAA3B,KAAEkC,EAAI,YAAEC,GAAanC,EAC7C,MAAMC,EAASiC,EAAKE,OAAOC,OACrB,SAAEC,GAAaH,EAEfI,EAAkBtC,EAAOuC,QAAO,CAACC,EAAQpC,KAC7C,MAAMqC,EAAcrC,EAAMC,YAAYoC,aAAe,UAC/CC,EAAoBF,EAAOC,IAAgB,GAKjD,OAHAC,EAAkBC,KAAKvC,GACvBoC,EAAOC,GAAeC,EAEfF,CAAM,GACZ,CAAC,GAEEI,EAAUC,OAAOC,KAAKR,GACzBS,OACAvC,KAAIiC,GACH5D,EAAAA,cAACiB,EAAAA,EAAS,CACRkB,IAAKyB,EACL7C,iBAAkB6C,EAClBzC,OAAQsC,EAAgBG,OAI9B,OAAO5D,EAAAA,cAACmE,EAAAA,EAAU,CAAC1C,MAAO+B,GAAWO,EAAqB,C","sources":["webpack://pokemonrng-com/./node_modules/@material-ui/icons/Visibility.js","webpack://pokemonrng-com/./src/components/guide-list.js","webpack://pokemonrng-com/./src/templates/category.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","import React from 'react';\nimport { Link } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport orderBy from 'lodash/orderBy';\n\nconst useStyles = makeStyles(theme => ({\n  guideInfo: {\n    display: 'flex',\n    paddingTop: theme.spacing(6),\n    paddingBottom: theme.spacing(6),\n  },\n  viewButton: {\n    marginRight: theme.spacing(4),\n  },\n  subCategoryTitle: {\n    marginTop: theme.spacing(6),\n  },\n}));\n\nconst getGuideTitleId = slug => `guide-${slug}-title`;\nconst getGuideDescriptionId = slug => `guide-${slug}-description`;\n\nexport const GuideList = ({ subCategoryTitle, guides }) => {\n  const classes = useStyles();\n\n  const orderedGuides = orderBy(guides, guide => guide.frontmatter.title);\n\n  const guideList = orderedGuides.map((guide, index) => {\n    const { title, slug, description } = guide.frontmatter;\n    const guideTitleId = getGuideTitleId(slug);\n    const guideDescriptionId = getGuideDescriptionId(slug);\n\n    return (\n      <React.Fragment key={title}>\n        <ListItem className={classes.guideInfo} disableGutters>\n          <IconButton\n            component={Link}\n            className={classes.viewButton}\n            to={`/${slug}`}\n            role=\"link\"\n            aria-labelledby={`${guideTitleId} ${guideDescriptionId}`}\n          >\n            <VisibilityIcon />\n          </IconButton>\n          <ListItemText>\n            <Typography variant=\"h5\" component=\"p\" id={guideTitleId}>\n              {title}\n            </Typography>\n            <Typography variant=\"body2\" id={guideDescriptionId}>\n              {description}\n            </Typography>\n          </ListItemText>\n        </ListItem>\n        {index < orderedGuides.length - 1 && <Divider aria-hidden=\"true\" />}\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Typography\n        variant=\"h4\"\n        component=\"h2\"\n        className={classes.subCategoryTitle}\n      >\n        {subCategoryTitle}\n      </Typography>\n      <List>{guideList}</List>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { MainLayout } from '../layouts/main';\nimport { GuideList } from '../components/guide-list';\n\nconst CategoryTemplate = ({ data, pageContext }) => {\n  const guides = data.allMdx.nodes;\n  const { category } = pageContext;\n\n  const organizedGuides = guides.reduce((result, guide) => {\n    const subCategory = guide.frontmatter.subCategory || 'General';\n    const subCategoryGuides = result[subCategory] || [];\n\n    subCategoryGuides.push(guide);\n    result[subCategory] = subCategoryGuides;\n\n    return result;\n  }, {});\n\n  const content = Object.keys(organizedGuides)\n    .sort()\n    .map(subCategory => (\n      <GuideList\n        key={subCategory}\n        subCategoryTitle={subCategory}\n        guides={organizedGuides[subCategory]}\n      />\n    ));\n\n  return <MainLayout title={category}>{content}</MainLayout>;\n};\n\nexport default CategoryTemplate;\n\nexport const query = graphql`\n  query ($categoryRegex: String!) {\n    allMdx(\n      filter: {\n        frontmatter: { isRoughDraft: { ne: true } }\n        fields: { pagePath: { regex: $categoryRegex } }\n      }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          description\n          slug\n          subCategory\n        }\n      }\n    }\n  }\n`;\n"],"names":["_interopRequireDefault","_interopRequireWildcard","exports","React","_default","default","createElement","d","useStyles","makeStyles","theme","guideInfo","display","paddingTop","spacing","paddingBottom","viewButton","marginRight","subCategoryTitle","marginTop","GuideList","_ref","guides","classes","orderedGuides","orderBy","guide","frontmatter","title","guideList","map","index","slug","description","guideTitleId","getGuideTitleId","guideDescriptionId","getGuideDescriptionId","key","ListItem","className","disableGutters","IconButton","component","Link","to","role","VisibilityIcon","ListItemText","Typography","variant","id","length","Divider","List","data","pageContext","allMdx","nodes","category","organizedGuides","reduce","result","subCategory","subCategoryGuides","push","content","Object","keys","sort","MainLayout"],"sourceRoot":""}